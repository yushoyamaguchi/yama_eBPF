/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __HELLO_TO_PIPE_BPF_SKEL_H__
#define __HELLO_TO_PIPE_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct hello_to_pipe_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *hello_world;
	} progs;
	struct {
		struct bpf_link *hello_world;
	} links;
	struct hello_to_pipe_bpf__rodata {
		char hello_str[13];
	} *rodata;
};

static void
hello_to_pipe_bpf__destroy(struct hello_to_pipe_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
hello_to_pipe_bpf__create_skeleton(struct hello_to_pipe_bpf *obj);

static inline struct hello_to_pipe_bpf *
hello_to_pipe_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct hello_to_pipe_bpf *obj;
	int err;

	obj = (struct hello_to_pipe_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = hello_to_pipe_bpf__create_skeleton(obj);
	err = err ?: bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	hello_to_pipe_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct hello_to_pipe_bpf *
hello_to_pipe_bpf__open(void)
{
	return hello_to_pipe_bpf__open_opts(NULL);
}

static inline int
hello_to_pipe_bpf__load(struct hello_to_pipe_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct hello_to_pipe_bpf *
hello_to_pipe_bpf__open_and_load(void)
{
	struct hello_to_pipe_bpf *obj;
	int err;

	obj = hello_to_pipe_bpf__open();
	if (!obj)
		return NULL;
	err = hello_to_pipe_bpf__load(obj);
	if (err) {
		hello_to_pipe_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
hello_to_pipe_bpf__attach(struct hello_to_pipe_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
hello_to_pipe_bpf__detach(struct hello_to_pipe_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
hello_to_pipe_bpf__create_skeleton(struct hello_to_pipe_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;

	s->sz = sizeof(*s);
	s->name = "hello_to_pipe_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "hello_to.rodata";
	s->maps[0].map = &obj->maps.rodata;
	s->maps[0].mmaped = (void **)&obj->rodata;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "hello_world";
	s->progs[0].prog = &obj->progs.hello_world;
	s->progs[0].link = &obj->links.hello_world;

	s->data_sz = 4680;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xc8\x0b\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1a\0\
\x01\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x0d\0\0\0\x85\0\0\0\x06\
\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x68\x65\x6c\x6c\x6f\x20\x77\x6f\x72\
\x6c\x64\x0a\0\x47\x50\x4c\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\
\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\0\0\x02\x34\0\x03\x25\x49\x13\x3f\x19\x3a\
\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\0\0\x04\x21\0\x49\x13\x37\x0b\0\0\
\x05\x26\0\x49\x13\0\0\x06\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x07\x24\0\x03\x25\
\x0b\x0b\x3e\x0b\0\0\x08\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x09\x0f\0\
\x49\x13\0\0\x0a\x15\x01\x49\x13\x27\x19\0\0\x0b\x05\0\x49\x13\0\0\x0c\x18\0\0\
\0\x0d\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x0e\x2e\x01\x11\x1b\x12\x06\
\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x0f\x05\0\
\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x10\x13\0\x03\x25\x3c\x19\0\0\0\xb1\0\0\0\
\x05\0\x01\x08\0\0\0\0\x01\0\x0c\0\x01\x08\0\0\0\0\0\0\0\x02\x02\x30\0\0\0\x08\
\0\0\0\x02\x03\x2e\0\0\0\0\x07\x02\xa1\0\x03\x3a\0\0\0\x04\x43\0\0\0\x0d\0\x05\
\x3f\0\0\0\x06\x04\x06\x01\x07\x05\x08\x07\x02\x06\x52\0\0\0\0\x0f\x02\xa1\x01\
\x03\x3f\0\0\0\x04\x43\0\0\0\x04\0\x08\x07\x66\0\0\0\x02\xab\x09\x6b\0\0\0\x0a\
\x7c\0\0\0\x0b\x80\0\0\0\x0b\x85\0\0\0\x0c\0\x06\x08\x05\x08\x09\x3a\0\0\0\x0d\
\x8d\0\0\0\x0a\x01\x1b\x06\x09\x07\x04\x0e\x02\x30\0\0\0\x01\x5a\x0b\0\x0a\xa9\
\0\0\0\x0f\x0d\0\x0a\xad\0\0\0\0\x06\x0c\x05\x04\x09\xb2\0\0\0\x10\x0e\0\x40\0\
\0\0\x05\0\0\0\0\0\0\0\x1c\0\0\0\x30\0\0\0\x79\0\0\0\x83\0\0\0\x88\0\0\0\x9c\0\
\0\0\xa4\0\0\0\xb5\0\0\0\xba\0\0\0\xc7\0\0\0\xcd\0\0\0\xd9\0\0\0\xdd\0\0\0\xe1\
\0\0\0\x55\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\
\x6f\x6e\x20\x31\x35\x2e\x30\x2e\x37\0\x68\x65\x6c\x6c\x6f\x5f\x74\x6f\x5f\x70\
\x69\x70\x65\x2e\x62\x70\x66\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x79\x2d\x79\x61\
\x6d\x61\x67\x75\x63\x68\x69\x2f\x79\x75\x73\x68\x6f\x2f\x32\x30\x32\x33\x2f\
\x6f\x74\x68\x65\x72\x73\x2f\x79\x61\x6d\x61\x5f\x65\x42\x50\x46\x2f\x65\x62\
\x70\x66\x5f\x66\x6c\x61\x62\x2f\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x5f\x70\
\x72\x69\x6e\x74\x6b\0\x68\x65\x6c\x6c\x6f\x5f\x73\x74\x72\0\x63\x68\x61\x72\0\
\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\
\x4c\x49\x43\x45\x4e\x53\x45\0\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x5f\x70\x72\
\x69\x6e\x74\x6b\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\
\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\0\
\x69\x6e\x74\0\x63\x74\x78\0\x70\x74\x5f\x72\x65\x67\x73\0\x1c\0\0\0\x05\0\x08\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\
\0\0\0\0\xf4\0\0\0\xf4\0\0\0\x0f\x01\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\
\0\0\0\x07\0\0\0\0\0\0\0\0\x01\0\0\x0d\x04\0\0\0\x09\0\0\0\x01\0\0\0\x0d\0\0\0\
\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x11\0\0\0\x01\0\0\x0c\x03\0\0\0\0\0\0\0\0\0\0\
\x0a\x07\0\0\0\xd4\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\
\0\0\x06\0\0\0\x09\0\0\0\x0d\0\0\0\xd9\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\xed\
\0\0\0\0\0\0\x0e\x08\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x07\0\0\0\x09\0\
\0\0\x04\0\0\0\xf7\0\0\0\0\0\0\x0e\x0b\0\0\0\x01\0\0\0\xff\0\0\0\x01\0\0\x0f\0\
\0\0\0\x0a\0\0\0\0\0\0\0\x0d\0\0\0\x07\x01\0\0\x01\0\0\x0f\0\0\0\0\x0c\0\0\0\0\
\0\0\0\x04\0\0\0\0\x70\x74\x5f\x72\x65\x67\x73\0\x63\x74\x78\0\x69\x6e\x74\0\
\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\0\x6b\x70\x72\x6f\x62\x65\x2f\x5f\
\x5f\x78\x36\x34\x5f\x73\x79\x73\x5f\x65\x78\x65\x63\x76\x65\0\x2f\x68\x6f\x6d\
\x65\x2f\x79\x2d\x79\x61\x6d\x61\x67\x75\x63\x68\x69\x2f\x79\x75\x73\x68\x6f\
\x2f\x32\x30\x32\x33\x2f\x6f\x74\x68\x65\x72\x73\x2f\x79\x61\x6d\x61\x5f\x65\
\x42\x50\x46\x2f\x65\x62\x70\x66\x5f\x66\x6c\x61\x62\x2f\x62\x70\x66\x5f\x74\
\x72\x61\x63\x65\x5f\x70\x72\x69\x6e\x74\x6b\x2f\x68\x65\x6c\x6c\x6f\x5f\x74\
\x6f\x5f\x70\x69\x70\x65\x2e\x62\x70\x66\x2e\x63\0\x20\x20\x20\x20\x62\x70\x66\
\x5f\x74\x72\x61\x63\x65\x5f\x70\x72\x69\x6e\x74\x6b\x28\x68\x65\x6c\x6c\x6f\
\x5f\x73\x74\x72\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x68\x65\x6c\x6c\x6f\x5f\
\x73\x74\x72\x29\x29\x3b\0\x20\x20\x20\x20\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\
\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\
\x59\x50\x45\x5f\x5f\0\x68\x65\x6c\x6c\x6f\x5f\x73\x74\x72\0\x4c\x49\x43\x45\
\x4e\x53\x45\0\x2e\x72\x6f\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\
\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\x2c\0\0\0\x40\0\0\0\0\0\0\
\0\x08\0\0\0\x1d\0\0\0\x01\0\0\0\0\0\0\0\x05\0\0\0\x10\0\0\0\x1d\0\0\0\x02\0\0\
\0\0\0\0\0\x35\0\0\0\x92\0\0\0\x05\x2c\0\0\x20\0\0\0\x35\0\0\0\xc6\0\0\0\x05\
\x30\0\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x8b\0\0\0\x05\0\x08\0\x69\0\0\0\x08\
\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\
\0\x49\0\0\0\x62\0\0\0\x03\x01\x1f\x02\x0f\x05\x1e\x03\x73\0\0\0\0\x54\x0a\x30\
\xc9\x89\xa3\xca\x1c\x14\x38\xad\x40\x60\x6f\x69\x63\x87\0\0\0\x01\xb8\x10\xf2\
\x70\x73\x3e\x10\x63\x19\xb6\x7e\xf5\x12\xc6\x24\x6e\x92\0\0\0\x02\xea\xdf\x4a\
\x8b\xcf\x7a\xc4\xe7\xbd\x6d\x2c\xb6\x66\x45\x22\x42\x04\0\0\x09\x02\0\0\0\0\0\
\0\0\0\x03\x09\x01\x05\x05\x0a\x13\x4b\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\
\x2f\x79\x2d\x79\x61\x6d\x61\x67\x75\x63\x68\x69\x2f\x79\x75\x73\x68\x6f\x2f\
\x32\x30\x32\x33\x2f\x6f\x74\x68\x65\x72\x73\x2f\x79\x61\x6d\x61\x5f\x65\x42\
\x50\x46\x2f\x65\x62\x70\x66\x5f\x66\x6c\x61\x62\x2f\x62\x70\x66\x5f\x74\x72\
\x61\x63\x65\x5f\x70\x72\x69\x6e\x74\x6b\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\
\x75\x64\x65\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\x69\x63\0\x2f\x75\x73\x72\
\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x68\x65\x6c\x6c\x6f\x5f\x74\
\x6f\x5f\x70\x69\x70\x65\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x2d\x6c\x6c\x36\
\x34\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\
\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\0\0\x04\
\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x0a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0c\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x15\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd1\0\0\
\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x39\0\0\0\x11\0\x05\0\0\0\0\0\
\0\0\0\0\x0d\0\0\0\0\0\0\0\x12\x01\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x03\0\0\
\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x1f\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x0c\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x14\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x1c\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x24\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x2c\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x34\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x3c\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x08\0\0\0\0\0\0\0\x02\0\0\0\x0b\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0c\0\0\0\
\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\xec\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x04\x01\0\0\0\0\0\0\x04\0\0\0\x0c\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\x40\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\x14\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\
\x22\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\
\x2a\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\
\x4b\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\
\x7a\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x0a\x0b\x0c\0\x2e\x64\x65\x62\x75\x67\
\x5f\x61\x62\x62\x72\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\
\x54\x46\x2e\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\
\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x68\x65\x6c\x6c\x6f\x5f\x73\x74\x72\0\
\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\
\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\
\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\
\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x2e\x72\x65\x6c\x6b\x70\x72\
\x6f\x62\x65\x2f\x5f\x5f\x78\x36\x34\x5f\x73\x79\x73\x5f\x65\x78\x65\x63\x76\
\x65\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\
\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\
\x6d\x65\0\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\0\x68\x65\x6c\x6c\x6f\
\x5f\x74\x6f\x5f\x70\x69\x70\x65\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\x72\x74\
\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\x72\
\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf1\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\xab\x0a\0\0\0\0\0\0\x1a\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x90\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x30\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8c\0\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x08\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\x19\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x01\x01\0\0\x01\0\0\0\
\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x7d\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x81\0\0\0\0\0\0\0\xbb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x72\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3c\x01\0\0\0\0\0\
\0\xb5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x6e\0\0\
\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x08\0\0\0\0\0\0\x40\0\0\0\0\
\0\0\0\x19\0\0\0\x08\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x26\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf1\x01\0\0\0\0\0\0\x44\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x09\0\0\0\x40\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xa8\x08\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\x19\0\0\0\x0a\0\0\
\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x43\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x35\x02\0\0\0\0\0\0\xe9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\x01\0\0\0\0\0\0\0\x62\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x1e\x03\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x5e\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x09\0\0\0\
\0\0\0\x30\0\0\0\0\0\0\0\x19\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x0d\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x03\0\0\0\0\0\0\
\x1b\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\x01\
\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x09\0\0\0\0\0\0\x20\0\0\0\
\0\0\0\0\x19\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5c\x05\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x09\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x19\0\0\0\x11\0\
\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xc4\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\xc0\x05\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xc0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x18\x0a\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x19\0\0\0\x13\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\xb4\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x05\
\0\0\0\0\0\0\x8f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xb0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x0a\0\0\0\0\0\0\
\x70\0\0\0\0\0\0\0\x19\0\0\0\x15\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x4e\
\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x77\x06\0\0\0\0\0\0\xa4\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x7e\0\0\0\x03\
\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xa8\x0a\0\0\0\0\0\0\x03\0\0\0\0\
\0\0\0\x19\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf9\0\0\0\x02\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x07\0\0\0\0\0\0\x38\x01\0\0\0\0\0\0\x01\0\
\0\0\x0a\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

#endif /* __HELLO_TO_PIPE_BPF_SKEL_H__ */
